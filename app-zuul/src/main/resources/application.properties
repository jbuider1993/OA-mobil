spring.application.name=app-service-zuul
server.port=8888
#服务访问地址,多个地址逗号隔开
eureka.client.serviceUrl.defaultZone=http://localhost:8000/eureka/
#将自己的IP地址注册到服务中
eureka.instance.prefer‐ip‐address=true
#eureka client配置5s从server同步一次服务列表
eureka.client.registry-fetch-interval-seconds=5
#表示eureka client发送心跳给server端的频率。如果在leaseExpirationDurationInSeconds后，server端没有收到client的心跳，则将摘除该instance。除此之外，
#如果该instance实现了HealthCheckCallback，并决定让自己unavailable的话，则该instance也不会接收到流量。---默认为30
eureka.instance.lease-renewal-interval-in-seconds=10
#表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。---默认为90
#--如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
#--如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
#--该值至少应该大于leaseRenewalIntervalInSeconds
eureka.instance.lease-expiration-duration-in-seconds=15

#如果你一个系统之中存在有几百个微服务，如果按照如上的方式进行配置就会非常的麻烦，所以最简单的做法是可以采用一个通配符“*”的模式来完成
zuul.ignored-services="*"
#当我的访问地址符合/app/**规则的时候，会被自动定位到app-consumer服务上去
zuul.routes.nopower.path=/app/**
zuul.routes.nopower.serviceId=app-consumer
zuul.routes.seal.path=/seal/**
zuul.routes.seal.serviceId=app-consumer-seal-service

#控制开启或者关闭swagger文档，true为开启，false为关闭
swagger.enabled=false

#需要忽略的头部信息，不在传播到其他服务
zuul.sensitive-headers=Access-Control-Allow-Origin
zuul.ignored-headers=Access-Control-Allow-Credentials,Access-Control-Allow-Origin,Vary,X-Frame-Options,token

spring.zipkin.base-url=http://localhost:8005
spring.sleuth.sampler.percentage=1.0

zuul.host.socket-timeout-millis=5000
zuul.host.connect-timeout-millis=5000
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=300000

# ribbon相关配置
# 设置读取超时时间，单位ms
ribbon.ReadTimeout=5000
# 设置连接超时时间，单位ms
ribbon.ConnectTimeout=5000
# 对所有操作请求都进行重试
ribbon.OkToRetryOnAllOperations=true
# 切换实例的重试次数
ribbon.MaxAutoRetriesNextServer=2
# 对当前实例的重试次数
ribbon.MaxAutoRetries=1
# 服务列表刷新频率 5s
ribbon.ServerListRefreshInterval=5000
ribbon.ConnIdleEvictTimeMilliSeconds=5000
ribbon.ConnIdleEvictTimeMilliSeconds=5000

#文件路径
IMAGES_PATH=D:/project/images/
